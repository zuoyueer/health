<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/mvc
						http://www.springframework.org/schema/mvc/spring-mvc.xsd
						http://code.alibabatech.com/schema/dubbo
						http://code.alibabatech.com/schema/dubbo/dubbo.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context.xsd">

    <mvc:annotation-driven conversion-service="conversionServiceFactory">
        <mvc:message-converters register-defaults="true">
            <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <!--数据json格式传输-->
                <property name="supportedMediaTypes" value="application/json"/>
                <property name="features">
                    <list>
                        <!--响应数据响应map为null,删除此节点数据-->
                        <value>WriteMapNullValue</value>
                        <!--响应数据Date类型, 可以自动转换成yyyy-MM-dd的形式-->
                        <value>WriteDateUseDateFormat</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- 指定应用名称 -->
    <dubbo:application name="health_web"/>
    <!--指定服务注册中心地址-->
    <dubbo:registry address="zookeeper://127.0.0.1:2181"/>
    <!--批量扫描-->
    <dubbo:annotation package="com.zuoyueer"/>
    <!--
        超时全局设置 10分钟
        check=false 不检查服务提供方，开发阶段建议设置为false
        check=true 启动时检查服务提供方，如果服务提供方没有启动则报错
    -->
    <dubbo:consumer timeout="600000" check="false"/>

    <!--视图解析器-->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--自定义拦截器(实际上是拦截链,类似于过滤器链)-->
    <!--  <mvc:interceptors>
          &lt;!&ndash;每个拦截器的执行顺序,就是定义的顺序,在前面的先执行,被拦截了就不停止&ndash;&gt;
          <mvc:interceptor>
              <mvc:mapping path="/**"/>
              <bean class="com.zuoyueer.interceptor.FileSizeInterceptor">
                  <property name="maxSize" value="30000"/>
              </bean>
          </mvc:interceptor>
          <mvc:interceptor>
              <mvc:mapping path="/**"/>
              <bean class="com.zuoyueer.interceptor.FileTypeInterceptor">
                  <property name="suffixList" value="jpg,gif,png"/>
              </bean>
          </mvc:interceptor>
      </mvc:interceptors>-->

    <!--静态资源部不拦截-->
    <mvc:default-servlet-handler/>

    <!--配置文件上传解析器:id必须是: multipartResolver
      文件上传的解析器 id是固定的，不能起别的名称，否则无法实现请求参数的绑定。
      （不光是文件，其他 字段也将无法绑定-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!--设置上传文件的最大容量,单位是字节, -1 表示不限制,我把它注释了是为了使用自定义的拦截器-->
        <!-- <property name="maxUploadSize" value="-1"/>-->
        <!--设置编码,解决文件名乱码问题-->
        <property name="maxUploadSize" value="104857600"/>
        <property name="maxInMemorySize" value="4096"/>
        <property name="defaultEncoding" value="utf-8"/>
    </bean>



    <!--配置类型转换器工厂-->
    <bean id="conversionServiceFactory" class="org.springframework.context.support.ConversionServiceFactoryBean">
        <!--给工厂注入一个类型转换器-->
        <property name="converters">
            <!--converters是set类型,可以配置多个自定义的类型转换器-->
            <array>
                <!--配置自定义类型转换器-->
                <bean class="com.zuoyueer.converter.StringToDateConverter"/>
            </array>
        </property>
    </bean>


    <!--引入redis配置-->
    <import resource="classpath:spring-redis.xml"/>

    <!--引入security配置-->
    <import resource="classpath:spring-security.xml"/>

    <!--<context:component-scan base-package="com.zuoyueer"/>-->
</beans>