<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace是命名空间,必须唯一,他是指是接口的全限定名 -->
<mapper namespace="com.zuoyueer.dao.OrderDao">


    <!--字段到属性的映射-->
    <resultMap id="OrderMap" type="com.zuoyueer.pojo.Order">
        <id column="id" property="id"/>
        <result column="member_id" property="memberId"/>
        <result column="orderDate" property="orderDate"/>
        <result column="orderType" property="orderType"/>
        <result column="orderStatus" property="orderStatus"/>
        <result column="setmeal_id" property="setmealId"/>
    </resultMap>

    <!--动态条件查询  体检预约信息t_order表 这个表存储的是用户的预约信息
        因为t_order表的字段和Order类的属性不一致,所以使用resultMap来映射
    -->
    <select id="findByCondition" parameterType="com.zuoyueer.pojo.Order" resultMap="OrderMap">
        select * from t_order
        <where>
            <if test="id!=null">
                and id = #{id}
            </if>
            <if test="memberId!=null">
                and member_id = #{memberId}
            </if>
            <if test="orderDate!=null">
                and orderDate = #{orderDate}
            </if>
            <if test="orderType!=null">
                and orderType = #{orderType}
            </if>
            <if test="orderStatus!=null">
                and orderStatus = #{orderStatus}
            </if>
            <if test="setmealId!=null">
                and setmeal_id = #{setmealId}
            </if>
        </where>
    </select>

    <!--增加预约信息-->
    <insert id="add" parameterType="com.zuoyueer.pojo.Order" keyProperty="id" useGeneratedKeys="true">
        insert into t_order
        values (null, #{memberId}, #{orderDate}, #{orderType}, #{orderStatus}, #{setmealId});
    </insert>

    <!--根据id查询用户预约的详细信息,需要关联3张表:套餐表,会员表,预约表,返回map集合-->
    <select id="findDetailById" parameterType="int" resultType="map">
        select o.orderDate, o.orderType, m.name member, s.name setmeal
        from t_order o,
             t_setmeal s,
             t_member m
        where o.setmeal_id = s.id
          and o.member_id = m.id
          and o.id = #{id}
    </select>

    <!--根据日期统计预约数-->
    <select id="findOrderCountByDate" parameterType="string" resultType="int">
        select count(id)
        from t_order
        where orderDate = #{date}
    </select>

    <!--根据日期统计预约数，统计指定日期之后的预约数-->
    <select id="findOrderCountAfterDate" parameterType="string" resultType="int">
        select count(id)
        from t_order
        where orderDate >= #{date}
    </select>

    <!--根据日期统计到诊数-->
    <select id="findVisitsCountByDate" parameterType="string" resultType="int">
        select count(id)
        from t_order
        where orderDate = #{date}
          and orderStatus = '已到诊'
    </select>

    <!--根据日期统计到诊数，统计指定日期之后的到诊数-->
    <select id="findVisitsCountAfterDate" parameterType="string" resultType="int">
        select count(id)
        from t_order
        where orderDate >= #{date}
          and orderStatus = '已到诊'
    </select>

    <!--统计预约最多的5个套餐,返回套餐名称,套餐预约数,该套餐预约占比:
        先关联预约表(t_order)和套餐表(t_setmeal),然后按照套餐id分组,排序,截取前5条,最后写获取的数据
    -->
    <select id="findHotSetmeal" resultType="map">
        select s.name, count(s.id) setmeal_count, count(s.id) / (select count(id) from t_order) proportion,s.remark
        from t_order o
                 join t_setmeal s on s.id = o.setmeal_id
        group by s.id
        order by setmeal_count desc
        limit 0,5
    </select>
</mapper>